# joint_state_controller:
  # type: joint_state_controller/JointStateController
  # publish_rate: 50


dual_arm_controller:
  type: "position_controllers/JointTrajectoryController"
  joints:
    - left_arm_shoulder_roll_joint
    - left_arm_shoulder_pitch_joint
    - left_arm_shoulder_yaw_joint
    - left_arm_elbow_pitch_joint
    - left_arm_elbow_yaw_joint
    - left_arm_wrist_pitch_joint
    - left_arm_wrist_roll_joint
    - right_arm_shoulder_roll_joint
    - right_arm_shoulder_pitch_joint
    - right_arm_shoulder_yaw_joint
    - right_arm_elbow_pitch_joint
    - right_arm_elbow_yaw_joint
    - right_arm_wrist_pitch_joint
    - right_arm_wrist_roll_joint
  



  #type: position_controllers/JointTrajectoryController
  
  #type:  position_controllers/GripperActionController   # Doesn't work gives error: Could not find joint name on param server
# left_gripper_controller:
  # type:  "position_controllers/JointTrajectoryController"
  # joints:
    # - left_arm_gripper_joint
  # constraints:
    # goal_time: 0.6
    # stopped_velocity_tolerance: 0.05
    # gripper_finger_joint: {trajectory: 0.2, goal: 0.2}
  # stop_trajectory_duration: 0.5
  # state_publish_rate:  50
  # action_monitor_rate: 5
   # # - left_arm_gripper_joint2
  
left_gripper_controller:
  #type: "position_controllers/JointTrajectoryController"
  type:  position_controllers/GripperActionController
  #type: "position_controllers/JointPositionController"
  joint: left_arm_gripper_joint



right_gripper_controller:
  #type: "position_controllers/JointTrajectoryController"
  type:  position_controllers/GripperActionController
  #type: "position_controllers/JointPositionController"
  joint: right_arm_gripper_joint
     
    # - right_arm_gripper_joint2
   


wheels_controller:
    type: "diff_drive_controller/DiffDriveController"
    publish_rate: 50
    left_wheel: wheel_left_joint
    right_wheel: wheel_right_joint
    wheel_separation: 0.44
    
# Odometry covariances for the encoder output of the robot. These values should
# be tuned to your robot's sample odometry data, but these values are a good place
# to start
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

# Top level frame (link) of the robot description
    base_frame_id: base_link

# Velocity and acceleration limits for the robot
    linear:
       x:
        has_velocity_limits    : true
        max_velocity           : 3   # m/s
        has_acceleration_limits: true
        max_acceleration       : 1   # m/s^2
    angular:
       z:
        has_velocity_limits    : true
        max_velocity           : 2.0   # rad/s
        has_acceleration_limits: true
        max_acceleration       : 6.0   # rad/s^2      
